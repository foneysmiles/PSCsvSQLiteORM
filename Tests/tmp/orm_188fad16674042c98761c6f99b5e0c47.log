[2025-08-31 22:50:56.882][INFO] ORM initialized. Level=DEBUG, LogPath=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\tmp\orm_188fad16674042c98761c6f99b5e0c47.log, DefaultDb=(none)
[2025-08-31 22:50:56.885][INFO] hello from test
[2025-08-31 22:50:57.150][DEBUG] SQL: CREATE TABLE IF NOT EXISTS "assets" ("id" INTEGER PRIMARY KEY AUTOINCREMENT, "hostname" TEXT, "ip" TEXT) | Params: 
[2025-08-31 22:50:57.215][DEBUG] SQL: PRAGMA table_info("assets") | Params: 
[2025-08-31 22:50:57.268][DEBUG] SQL: INSERT INTO "assets" ("id", "hostname", "ip") VALUES (@id, @hostname, @ip) | Params: hostname=server01, ip=192.168.1.10, id=1
[2025-08-31 22:50:57.290][DEBUG] SQL: INSERT INTO "assets" ("id", "hostname", "ip") VALUES (@id, @hostname, @ip) | Params: hostname=server02, ip=192.168.1.11, id=2
[2025-08-31 22:50:57.300][DEBUG] SQL: INSERT INTO "assets" ("id", "hostname", "ip") VALUES (@id, @hostname, @ip) | Params: hostname=server03, ip=192.168.1.12, id=3
[2025-08-31 22:50:57.355][DEBUG] SQL: CREATE TABLE IF NOT EXISTS schema_migrations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version TEXT NOT NULL UNIQUE,
    applied_at TEXT NOT NULL
) | Params: 
[2025-08-31 22:50:57.379][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __tables__ (
    table_name TEXT PRIMARY KEY,
    source TEXT,
    created_at TEXT,
    csv_hash TEXT,
    rowcount INTEGER,
    sample_json TEXT
) | Params: 
[2025-08-31 22:50:57.400][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __columns__ (
    table_name TEXT,
    column_name TEXT,
    data_type TEXT,
    nullable INTEGER,
    pk INTEGER,
    example_values_json TEXT,
    PRIMARY KEY (table_name, column_name)
) | Params: 
[2025-08-31 22:50:57.420][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __fks__ (
    table_name TEXT,
    column_name TEXT,
    ref_table TEXT,
    ref_column TEXT,
    confidence REAL,
    status TEXT,
    on_delete TEXT,
    on_update TEXT,
    PRIMARY KEY (table_name, column_name)
); | Params: 
[2025-08-31 22:50:57.441][DEBUG] SQL: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' | Params: 
[2025-08-31 22:50:57.454][DEBUG] SQL: SELECT COUNT(*) AS c FROM "assets" | Params: 
[2025-08-31 22:50:57.475][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=assets, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, j=, h=860581D0EA7C3DC744E814F1AA1090E0DDD9C0983848423C1495DC36CCBD2035, c=3
[2025-08-31 22:50:57.507][DEBUG] SQL: PRAGMA table_info("assets") | Params: 
[2025-08-31 22:50:57.529][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=id, n=1, t=assets, ex=, dt=INTEGER
[2025-08-31 22:50:57.554][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=hostname, n=1, t=assets, ex=, dt=TEXT
[2025-08-31 22:50:57.579][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=ip, n=1, t=assets, ex=, dt=TEXT
[2025-08-31 22:50:57.602][DEBUG] SQL: PRAGMA foreign_key_list("assets") | Params: 
[2025-08-31 22:50:57.614][DEBUG] SQL: SELECT COUNT(*) AS c FROM "schema_migrations" | Params: 
[2025-08-31 22:50:57.629][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=schema_migrations, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, j=, h=, c=0
[2025-08-31 22:50:57.652][DEBUG] SQL: PRAGMA table_info("schema_migrations") | Params: 
[2025-08-31 22:50:57.674][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=id, n=1, t=schema_migrations, ex=, dt=INTEGER
[2025-08-31 22:50:57.700][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=version, n=0, t=schema_migrations, ex=, dt=TEXT
[2025-08-31 22:50:57.724][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=applied_at, n=0, t=schema_migrations, ex=, dt=TEXT
[2025-08-31 22:50:57.747][DEBUG] SQL: PRAGMA foreign_key_list("schema_migrations") | Params: 
[2025-08-31 22:50:57.761][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__tables__" | Params: 
[2025-08-31 22:50:57.775][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=__tables__, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, j=, h=, c=2
[2025-08-31 22:50:57.796][DEBUG] SQL: PRAGMA table_info("__tables__") | Params: 
[2025-08-31 22:50:57.812][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=table_name, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:57.835][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=source, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:57.859][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=created_at, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:57.881][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=csv_hash, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:57.906][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=rowcount, n=1, t=__tables__, ex=, dt=INTEGER
[2025-08-31 22:50:57.930][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=sample_json, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:57.954][DEBUG] SQL: PRAGMA foreign_key_list("__tables__") | Params: 
[2025-08-31 22:50:57.968][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__columns__" | Params: 
[2025-08-31 22:50:57.984][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=__columns__, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, j=, h=, c=12
[2025-08-31 22:50:58.010][DEBUG] SQL: PRAGMA table_info("__columns__") | Params: 
[2025-08-31 22:50:58.026][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=table_name, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:58.049][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, c=column_name, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:58.079][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=data_type, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:58.108][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=nullable, n=1, t=__columns__, ex=, dt=INTEGER
[2025-08-31 22:50:58.131][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=pk, n=1, t=__columns__, ex=, dt=INTEGER
[2025-08-31 22:50:58.157][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=example_values_json, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:58.181][DEBUG] SQL: PRAGMA foreign_key_list("__columns__") | Params: 
[2025-08-31 22:50:58.203][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__fks__" | Params: 
[2025-08-31 22:50:58.217][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=__fks__, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, j=, h=, c=0
[2025-08-31 22:50:58.240][DEBUG] SQL: PRAGMA table_info("__fks__") | Params: 
[2025-08-31 22:50:58.257][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=table_name, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.280][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, c=column_name, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.304][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=ref_table, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.328][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=ref_column, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.352][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=confidence, n=1, t=__fks__, ex=, dt=REAL
[2025-08-31 22:50:58.377][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=status, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.400][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=on_delete, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.425][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=on_update, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:58.446][DEBUG] SQL: PRAGMA foreign_key_list("__fks__") | Params: 
[2025-08-31 22:50:58.471][DEBUG] SQL: CREATE TABLE IF NOT EXISTS "vulns" ("id" INTEGER PRIMARY KEY AUTOINCREMENT, "asset_id" INTEGER, "title" TEXT, "severity" TEXT) | Params: 
[2025-08-31 22:50:58.495][DEBUG] SQL: PRAGMA table_info("vulns") | Params: 
[2025-08-31 22:50:58.513][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=1, asset_id=1, severity=Critical, title=SQL Injection
[2025-08-31 22:50:58.529][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=2, asset_id=2, severity=High, title=Cross-Site Scripting
[2025-08-31 22:50:58.543][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=3, asset_id=1, severity=Medium, title=Open Redirect
[2025-08-31 22:50:58.558][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=4, asset_id=3, severity=Low, title=Weak Password
[2025-08-31 22:50:58.580][DEBUG] SQL: CREATE TABLE IF NOT EXISTS schema_migrations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version TEXT NOT NULL UNIQUE,
    applied_at TEXT NOT NULL
) | Params: 
[2025-08-31 22:50:58.593][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __tables__ (
    table_name TEXT PRIMARY KEY,
    source TEXT,
    created_at TEXT,
    csv_hash TEXT,
    rowcount INTEGER,
    sample_json TEXT
) | Params: 
[2025-08-31 22:50:58.605][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __columns__ (
    table_name TEXT,
    column_name TEXT,
    data_type TEXT,
    nullable INTEGER,
    pk INTEGER,
    example_values_json TEXT,
    PRIMARY KEY (table_name, column_name)
) | Params: 
[2025-08-31 22:50:58.617][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __fks__ (
    table_name TEXT,
    column_name TEXT,
    ref_table TEXT,
    ref_column TEXT,
    confidence REAL,
    status TEXT,
    on_delete TEXT,
    on_update TEXT,
    PRIMARY KEY (table_name, column_name)
); | Params: 
[2025-08-31 22:50:58.633][DEBUG] SQL: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' | Params: 
[2025-08-31 22:50:58.650][DEBUG] SQL: SELECT COUNT(*) AS c FROM "assets" | Params: 
[2025-08-31 22:50:58.666][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=assets, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, j=, h=, c=3
[2025-08-31 22:50:58.690][DEBUG] SQL: PRAGMA table_info("assets") | Params: 
[2025-08-31 22:50:58.704][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=id, n=1, t=assets, ex=, dt=INTEGER
[2025-08-31 22:50:58.718][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=hostname, n=1, t=assets, ex=, dt=TEXT
[2025-08-31 22:50:58.731][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=ip, n=1, t=assets, ex=, dt=TEXT
[2025-08-31 22:50:58.744][DEBUG] SQL: PRAGMA foreign_key_list("assets") | Params: 
[2025-08-31 22:50:58.756][DEBUG] SQL: SELECT COUNT(*) AS c FROM "schema_migrations" | Params: 
[2025-08-31 22:50:58.774][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=schema_migrations, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, j=, h=, c=0
[2025-08-31 22:50:58.799][DEBUG] SQL: PRAGMA table_info("schema_migrations") | Params: 
[2025-08-31 22:50:58.814][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=id, n=1, t=schema_migrations, ex=, dt=INTEGER
[2025-08-31 22:50:58.828][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=version, n=0, t=schema_migrations, ex=, dt=TEXT
[2025-08-31 22:50:58.842][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=applied_at, n=0, t=schema_migrations, ex=, dt=TEXT
[2025-08-31 22:50:58.855][DEBUG] SQL: PRAGMA foreign_key_list("schema_migrations") | Params: 
[2025-08-31 22:50:58.868][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__tables__" | Params: 
[2025-08-31 22:50:58.883][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=__tables__, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, j=, h=, c=5
[2025-08-31 22:50:58.908][DEBUG] SQL: PRAGMA table_info("__tables__") | Params: 
[2025-08-31 22:50:58.923][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=table_name, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:58.936][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=source, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:58.949][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=created_at, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:58.962][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=csv_hash, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:58.975][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=rowcount, n=1, t=__tables__, ex=, dt=INTEGER
[2025-08-31 22:50:58.990][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=sample_json, n=1, t=__tables__, ex=, dt=TEXT
[2025-08-31 22:50:59.003][DEBUG] SQL: PRAGMA foreign_key_list("__tables__") | Params: 
[2025-08-31 22:50:59.017][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__columns__" | Params: 
[2025-08-31 22:50:59.032][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=__columns__, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, j=, h=, c=26
[2025-08-31 22:50:59.057][DEBUG] SQL: PRAGMA table_info("__columns__") | Params: 
[2025-08-31 22:50:59.073][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=table_name, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:59.086][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, c=column_name, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:59.099][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=data_type, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:59.113][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=nullable, n=1, t=__columns__, ex=, dt=INTEGER
[2025-08-31 22:50:59.126][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=pk, n=1, t=__columns__, ex=, dt=INTEGER
[2025-08-31 22:50:59.138][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=example_values_json, n=1, t=__columns__, ex=, dt=TEXT
[2025-08-31 22:50:59.151][DEBUG] SQL: PRAGMA foreign_key_list("__columns__") | Params: 
[2025-08-31 22:50:59.165][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__fks__" | Params: 
[2025-08-31 22:50:59.179][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=__fks__, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, j=, h=, c=0
[2025-08-31 22:50:59.203][DEBUG] SQL: PRAGMA table_info("__fks__") | Params: 
[2025-08-31 22:50:59.220][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=table_name, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.237][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, c=column_name, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.250][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=ref_table, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.264][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=ref_column, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.277][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=confidence, n=1, t=__fks__, ex=, dt=REAL
[2025-08-31 22:50:59.289][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=status, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.301][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=on_delete, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.314][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=on_update, n=1, t=__fks__, ex=, dt=TEXT
[2025-08-31 22:50:59.326][DEBUG] SQL: PRAGMA foreign_key_list("__fks__") | Params: 
[2025-08-31 22:50:59.341][DEBUG] SQL: SELECT COUNT(*) AS c FROM "vulns" | Params: 
[2025-08-31 22:50:59.356][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: t=vulns, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, j=, h=EB14ABA7D4F57129992EAF634CEC0647BBEEB5D702E0211E138DBCA63540EE07, c=4
[2025-08-31 22:50:59.379][DEBUG] SQL: PRAGMA table_info("vulns") | Params: 
[2025-08-31 22:50:59.394][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, c=id, n=1, t=vulns, ex=, dt=INTEGER
[2025-08-31 22:50:59.415][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=asset_id, n=1, t=vulns, ex=, dt=INTEGER
[2025-08-31 22:50:59.440][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=title, n=1, t=vulns, ex=, dt=TEXT
[2025-08-31 22:50:59.464][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, c=severity, n=1, t=vulns, ex=, dt=TEXT
[2025-08-31 22:50:59.490][DEBUG] SQL: PRAGMA foreign_key_list("vulns") | Params: 
[2025-08-31 22:50:59.506][DEBUG] SQL: CREATE TABLE IF NOT EXISTS schema_migrations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version TEXT NOT NULL UNIQUE,
    applied_at TEXT NOT NULL
) | Params: 
[2025-08-31 22:50:59.519][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __tables__ (
    table_name TEXT PRIMARY KEY,
    source TEXT,
    created_at TEXT,
    csv_hash TEXT,
    rowcount INTEGER,
    sample_json TEXT
) | Params: 
[2025-08-31 22:50:59.532][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __columns__ (
    table_name TEXT,
    column_name TEXT,
    data_type TEXT,
    nullable INTEGER,
    pk INTEGER,
    example_values_json TEXT,
    PRIMARY KEY (table_name, column_name)
) | Params: 
[2025-08-31 22:50:59.547][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __fks__ (
    table_name TEXT,
    column_name TEXT,
    ref_table TEXT,
    ref_column TEXT,
    confidence REAL,
    status TEXT,
    on_delete TEXT,
    on_update TEXT,
    PRIMARY KEY (table_name, column_name)
); | Params: 
[2025-08-31 22:50:59.561][DEBUG] SQL: SELECT table_name FROM __tables__ | Params: 
[2025-08-31 22:50:59.579][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=__columns__
[2025-08-31 22:50:59.596][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=__fks__
[2025-08-31 22:50:59.612][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=__tables__
[2025-08-31 22:50:59.633][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=assets
[2025-08-31 22:50:59.653][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=schema_migrations
[2025-08-31 22:50:59.670][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=vulns
[2025-08-31 22:50:59.694][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@rt | Params: rt=assets
[2025-08-31 22:50:59.729][DEBUG] SQL: INSERT INTO __fks__(table_name,column_name,ref_table,ref_column,confidence,status)
VALUES(@t,@c,@rt,@rc,@conf,'suggested')
ON CONFLICT(table_name,column_name)
DO UPDATE SET
  ref_table=excluded.ref_table,
  ref_column=excluded.ref_column,
  confidence=excluded.confidence,
  status=COALESCE(__fks__.status,'suggested') | Params: t=vulns, rc=id, conf=1, rt=assets, c=asset_id
[2025-08-31 22:50:59.833][DEBUG] SQL: CREATE TABLE a(id INTEGER PRIMARY KEY, name TEXT) | Params: 
[2025-08-31 22:50:59.868][DEBUG] SQL: CREATE TABLE b(id INTEGER PRIMARY KEY, a_id INTEGER, val TEXT) | Params: 
[2025-08-31 22:50:59.898][DEBUG] SQL: INSERT INTO a(id,name) VALUES (1,'a1'),(2,'a2') | Params: 
[2025-08-31 22:50:59.925][DEBUG] SQL: INSERT INTO b(id,a_id,val) VALUES (10,1,'b1'),(11,3,'b2') | Params: 
[2025-08-31 22:50:59.987][DEBUG] SQL: SELECT a.id as aid, b.id as bid FROM b LEFT JOIN a ON a.id = b.a_id | Params: 
