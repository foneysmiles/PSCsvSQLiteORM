[2025-08-31 22:37:37.431][INFO] ORM initialized. Level=DEBUG, LogPath=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\tmp\orm_1d2472b516b24ff7a509923a41ee6a3a.log, DefaultDb=(none)
[2025-08-31 22:37:37.434][INFO] hello from test
[2025-08-31 22:37:37.835][DEBUG] SQL: CREATE TABLE IF NOT EXISTS "assets" ("id" INTEGER PRIMARY KEY AUTOINCREMENT, "hostname" TEXT, "ip" TEXT) | Params: 
[2025-08-31 22:37:37.997][DEBUG] SQL: PRAGMA table_info("assets") | Params: 
[2025-08-31 22:37:38.128][DEBUG] SQL: INSERT INTO "assets" ("id", "hostname", "ip") VALUES (@id, @hostname, @ip) | Params: hostname=server01, id=1, ip=192.168.1.10
[2025-08-31 22:37:38.159][DEBUG] SQL: INSERT INTO "assets" ("id", "hostname", "ip") VALUES (@id, @hostname, @ip) | Params: hostname=server02, id=2, ip=192.168.1.11
[2025-08-31 22:37:38.179][DEBUG] SQL: INSERT INTO "assets" ("id", "hostname", "ip") VALUES (@id, @hostname, @ip) | Params: hostname=server03, id=3, ip=192.168.1.12
[2025-08-31 22:37:38.241][DEBUG] SQL: CREATE TABLE IF NOT EXISTS schema_migrations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version TEXT NOT NULL UNIQUE,
    applied_at TEXT NOT NULL
) | Params: 
[2025-08-31 22:37:38.265][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __tables__ (
    table_name TEXT PRIMARY KEY,
    source TEXT,
    created_at TEXT,
    csv_hash TEXT,
    rowcount INTEGER,
    sample_json TEXT
) | Params: 
[2025-08-31 22:37:38.288][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __columns__ (
    table_name TEXT,
    column_name TEXT,
    data_type TEXT,
    nullable INTEGER,
    pk INTEGER,
    example_values_json TEXT,
    PRIMARY KEY (table_name, column_name)
) | Params: 
[2025-08-31 22:37:38.312][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __fks__ (
    table_name TEXT,
    column_name TEXT,
    ref_table TEXT,
    ref_column TEXT,
    confidence REAL,
    status TEXT,
    on_delete TEXT,
    on_update TEXT,
    PRIMARY KEY (table_name, column_name)
); | Params: 
[2025-08-31 22:37:38.335][DEBUG] SQL: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' | Params: 
[2025-08-31 22:37:38.354][DEBUG] SQL: SELECT COUNT(*) AS c FROM "assets" | Params: 
[2025-08-31 22:37:38.379][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=3, h=860581D0EA7C3DC744E814F1AA1090E0DDD9C0983848423C1495DC36CCBD2035, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, t=assets
[2025-08-31 22:37:38.404][DEBUG] SQL: PRAGMA table_info("assets") | Params: 
[2025-08-31 22:37:38.425][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=id, t=assets, n=1, dt=INTEGER
[2025-08-31 22:37:38.448][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=hostname, t=assets, n=1, dt=TEXT
[2025-08-31 22:37:38.471][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=ip, t=assets, n=1, dt=TEXT
[2025-08-31 22:37:38.496][DEBUG] SQL: PRAGMA foreign_key_list("assets") | Params: 
[2025-08-31 22:37:38.509][DEBUG] SQL: SELECT COUNT(*) AS c FROM "schema_migrations" | Params: 
[2025-08-31 22:37:38.531][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=0, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, t=schema_migrations
[2025-08-31 22:37:38.557][DEBUG] SQL: PRAGMA table_info("schema_migrations") | Params: 
[2025-08-31 22:37:38.572][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=id, t=schema_migrations, n=1, dt=INTEGER
[2025-08-31 22:37:38.597][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=version, t=schema_migrations, n=0, dt=TEXT
[2025-08-31 22:37:38.620][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=applied_at, t=schema_migrations, n=0, dt=TEXT
[2025-08-31 22:37:38.643][DEBUG] SQL: PRAGMA foreign_key_list("schema_migrations") | Params: 
[2025-08-31 22:37:38.657][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__tables__" | Params: 
[2025-08-31 22:37:38.675][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=2, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, t=__tables__
[2025-08-31 22:37:38.702][DEBUG] SQL: PRAGMA table_info("__tables__") | Params: 
[2025-08-31 22:37:38.719][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=table_name, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:38.744][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=source, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:38.768][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=created_at, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:38.793][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=csv_hash, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:38.818][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=rowcount, t=__tables__, n=1, dt=INTEGER
[2025-08-31 22:37:38.842][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=sample_json, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:38.865][DEBUG] SQL: PRAGMA foreign_key_list("__tables__") | Params: 
[2025-08-31 22:37:38.880][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__columns__" | Params: 
[2025-08-31 22:37:38.896][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=12, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, t=__columns__
[2025-08-31 22:37:38.918][DEBUG] SQL: PRAGMA table_info("__columns__") | Params: 
[2025-08-31 22:37:38.936][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=table_name, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:38.973][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, ex=, c=column_name, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:38.998][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=data_type, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:39.021][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=nullable, t=__columns__, n=1, dt=INTEGER
[2025-08-31 22:37:39.046][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=pk, t=__columns__, n=1, dt=INTEGER
[2025-08-31 22:37:39.069][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=example_values_json, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:39.093][DEBUG] SQL: PRAGMA foreign_key_list("__columns__") | Params: 
[2025-08-31 22:37:39.107][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__fks__" | Params: 
[2025-08-31 22:37:39.122][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=0, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\assets.csv, t=__fks__
[2025-08-31 22:37:39.145][DEBUG] SQL: PRAGMA table_info("__fks__") | Params: 
[2025-08-31 22:37:39.165][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=table_name, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.191][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, ex=, c=column_name, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.216][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=ref_table, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.241][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=ref_column, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.265][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=confidence, t=__fks__, n=1, dt=REAL
[2025-08-31 22:37:39.289][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=status, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.313][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=on_delete, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.342][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=on_update, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:39.367][DEBUG] SQL: PRAGMA foreign_key_list("__fks__") | Params: 
[2025-08-31 22:37:39.409][DEBUG] SQL: CREATE TABLE IF NOT EXISTS "vulns" ("id" INTEGER PRIMARY KEY AUTOINCREMENT, "asset_id" INTEGER, "title" TEXT, "severity" TEXT) | Params: 
[2025-08-31 22:37:39.434][DEBUG] SQL: PRAGMA table_info("vulns") | Params: 
[2025-08-31 22:37:39.453][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=1, asset_id=1, title=SQL Injection, severity=Critical
[2025-08-31 22:37:39.469][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=2, asset_id=2, title=Cross-Site Scripting, severity=High
[2025-08-31 22:37:39.485][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=3, asset_id=1, title=Open Redirect, severity=Medium
[2025-08-31 22:37:39.499][DEBUG] SQL: INSERT INTO "vulns" ("id", "asset_id", "title", "severity") VALUES (@id, @asset_id, @title, @severity) | Params: id=4, asset_id=3, title=Weak Password, severity=Low
[2025-08-31 22:37:39.526][DEBUG] SQL: CREATE TABLE IF NOT EXISTS schema_migrations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version TEXT NOT NULL UNIQUE,
    applied_at TEXT NOT NULL
) | Params: 
[2025-08-31 22:37:39.567][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __tables__ (
    table_name TEXT PRIMARY KEY,
    source TEXT,
    created_at TEXT,
    csv_hash TEXT,
    rowcount INTEGER,
    sample_json TEXT
) | Params: 
[2025-08-31 22:37:39.587][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __columns__ (
    table_name TEXT,
    column_name TEXT,
    data_type TEXT,
    nullable INTEGER,
    pk INTEGER,
    example_values_json TEXT,
    PRIMARY KEY (table_name, column_name)
) | Params: 
[2025-08-31 22:37:39.606][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __fks__ (
    table_name TEXT,
    column_name TEXT,
    ref_table TEXT,
    ref_column TEXT,
    confidence REAL,
    status TEXT,
    on_delete TEXT,
    on_update TEXT,
    PRIMARY KEY (table_name, column_name)
); | Params: 
[2025-08-31 22:37:39.620][DEBUG] SQL: SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' | Params: 
[2025-08-31 22:37:39.637][DEBUG] SQL: SELECT COUNT(*) AS c FROM "assets" | Params: 
[2025-08-31 22:37:39.654][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=3, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, t=assets
[2025-08-31 22:37:39.683][DEBUG] SQL: PRAGMA table_info("assets") | Params: 
[2025-08-31 22:37:39.714][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=id, t=assets, n=1, dt=INTEGER
[2025-08-31 22:37:39.734][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=hostname, t=assets, n=1, dt=TEXT
[2025-08-31 22:37:39.748][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=ip, t=assets, n=1, dt=TEXT
[2025-08-31 22:37:39.762][DEBUG] SQL: PRAGMA foreign_key_list("assets") | Params: 
[2025-08-31 22:37:39.778][DEBUG] SQL: SELECT COUNT(*) AS c FROM "schema_migrations" | Params: 
[2025-08-31 22:37:39.802][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=0, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, t=schema_migrations
[2025-08-31 22:37:39.831][DEBUG] SQL: PRAGMA table_info("schema_migrations") | Params: 
[2025-08-31 22:37:39.854][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=id, t=schema_migrations, n=1, dt=INTEGER
[2025-08-31 22:37:39.878][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=version, t=schema_migrations, n=0, dt=TEXT
[2025-08-31 22:37:39.895][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=applied_at, t=schema_migrations, n=0, dt=TEXT
[2025-08-31 22:37:39.911][DEBUG] SQL: PRAGMA foreign_key_list("schema_migrations") | Params: 
[2025-08-31 22:37:39.926][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__tables__" | Params: 
[2025-08-31 22:37:39.946][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=5, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, t=__tables__
[2025-08-31 22:37:39.969][DEBUG] SQL: PRAGMA table_info("__tables__") | Params: 
[2025-08-31 22:37:39.985][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=table_name, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:39.999][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=source, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:40.012][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=created_at, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:40.025][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=csv_hash, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:40.039][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=rowcount, t=__tables__, n=1, dt=INTEGER
[2025-08-31 22:37:40.056][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=sample_json, t=__tables__, n=1, dt=TEXT
[2025-08-31 22:37:40.069][DEBUG] SQL: PRAGMA foreign_key_list("__tables__") | Params: 
[2025-08-31 22:37:40.085][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__columns__" | Params: 
[2025-08-31 22:37:40.103][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=26, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, t=__columns__
[2025-08-31 22:37:40.129][DEBUG] SQL: PRAGMA table_info("__columns__") | Params: 
[2025-08-31 22:37:40.154][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=table_name, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:40.175][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, ex=, c=column_name, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:40.190][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=data_type, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:40.205][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=nullable, t=__columns__, n=1, dt=INTEGER
[2025-08-31 22:37:40.221][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=pk, t=__columns__, n=1, dt=INTEGER
[2025-08-31 22:37:40.235][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=example_values_json, t=__columns__, n=1, dt=TEXT
[2025-08-31 22:37:40.250][DEBUG] SQL: PRAGMA foreign_key_list("__columns__") | Params: 
[2025-08-31 22:37:40.265][DEBUG] SQL: SELECT COUNT(*) AS c FROM "__fks__" | Params: 
[2025-08-31 22:37:40.283][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=0, h=, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, t=__fks__
[2025-08-31 22:37:40.313][DEBUG] SQL: PRAGMA table_info("__fks__") | Params: 
[2025-08-31 22:37:40.331][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=table_name, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.346][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=2, ex=, c=column_name, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.361][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=ref_table, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.374][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=ref_column, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.388][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=confidence, t=__fks__, n=1, dt=REAL
[2025-08-31 22:37:40.406][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=status, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.421][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=on_delete, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.435][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=on_update, t=__fks__, n=1, dt=TEXT
[2025-08-31 22:37:40.451][DEBUG] SQL: PRAGMA foreign_key_list("__fks__") | Params: 
[2025-08-31 22:37:40.467][DEBUG] SQL: SELECT COUNT(*) AS c FROM "vulns" | Params: 
[2025-08-31 22:37:40.484][DEBUG] SQL: INSERT INTO __tables__(table_name,source,created_at,csv_hash,rowcount,sample_json)
VALUES(@t,@s,COALESCE((SELECT created_at FROM __tables__ WHERE table_name=@t),(datetime('now'))),@h,@c,@j)
ON CONFLICT(table_name) DO UPDATE SET
  source=COALESCE(excluded.source,__tables__.source),
  csv_hash=excluded.csv_hash,
  rowcount=excluded.rowcount | Params: j=, c=4, h=EB14ABA7D4F57129992EAF634CEC0647BBEEB5D702E0211E138DBCA63540EE07, s=C:\Users\Jaga\Documents\Scripts\PSCsvSqliteORM\PSCsvSQLiteORM\Tests\vulns.csv, t=vulns
[2025-08-31 22:37:40.510][DEBUG] SQL: PRAGMA table_info("vulns") | Params: 
[2025-08-31 22:37:40.527][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=1, ex=, c=id, t=vulns, n=1, dt=INTEGER
[2025-08-31 22:37:40.554][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=asset_id, t=vulns, n=1, dt=INTEGER
[2025-08-31 22:37:40.580][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=title, t=vulns, n=1, dt=TEXT
[2025-08-31 22:37:40.604][DEBUG] SQL: INSERT INTO __columns__(table_name,column_name,data_type,nullable,pk,example_values_json)
VALUES(@t,@c,@dt,@n,@pk,@ex)
ON CONFLICT(table_name,column_name) DO UPDATE SET data_type=excluded.data_type, nullable=excluded.nullable, pk=excluded.pk | Params: pk=0, ex=, c=severity, t=vulns, n=1, dt=TEXT
[2025-08-31 22:37:40.629][DEBUG] SQL: PRAGMA foreign_key_list("vulns") | Params: 
[2025-08-31 22:37:40.647][DEBUG] SQL: CREATE TABLE IF NOT EXISTS schema_migrations (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    version TEXT NOT NULL UNIQUE,
    applied_at TEXT NOT NULL
) | Params: 
[2025-08-31 22:37:40.662][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __tables__ (
    table_name TEXT PRIMARY KEY,
    source TEXT,
    created_at TEXT,
    csv_hash TEXT,
    rowcount INTEGER,
    sample_json TEXT
) | Params: 
[2025-08-31 22:37:40.677][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __columns__ (
    table_name TEXT,
    column_name TEXT,
    data_type TEXT,
    nullable INTEGER,
    pk INTEGER,
    example_values_json TEXT,
    PRIMARY KEY (table_name, column_name)
) | Params: 
[2025-08-31 22:37:40.691][DEBUG] SQL: CREATE TABLE IF NOT EXISTS __fks__ (
    table_name TEXT,
    column_name TEXT,
    ref_table TEXT,
    ref_column TEXT,
    confidence REAL,
    status TEXT,
    on_delete TEXT,
    on_update TEXT,
    PRIMARY KEY (table_name, column_name)
); | Params: 
[2025-08-31 22:37:40.709][DEBUG] SQL: SELECT table_name FROM __tables__ | Params: 
[2025-08-31 22:37:40.746][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=__columns__
[2025-08-31 22:37:40.770][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=__fks__
[2025-08-31 22:37:40.800][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=__tables__
[2025-08-31 22:37:40.818][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=assets
[2025-08-31 22:37:40.836][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=schema_migrations
[2025-08-31 22:37:40.854][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@t | Params: t=vulns
[2025-08-31 22:37:40.887][DEBUG] SQL: SELECT column_name FROM __columns__ WHERE table_name=@rt | Params: rt=assets
[2025-08-31 22:37:40.949][DEBUG] SQL: INSERT INTO __fks__(table_name,column_name,ref_table,ref_column,confidence,status)
VALUES(@t,@c,@rt,@rc,@conf,'suggested')
ON CONFLICT(table_name,column_name)
DO UPDATE SET
  ref_table=excluded.ref_table,
  ref_column=excluded.ref_column,
  confidence=excluded.confidence,
  status=COALESCE(__fks__.status,'suggested') | Params: rt=assets, c=asset_id, rc=id, conf=1, t=vulns
